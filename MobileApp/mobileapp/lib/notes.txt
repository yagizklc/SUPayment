Notes for future implementations:

1- "Payment type" data can be turned into a smart contract address of the ERC-20 token.
2- QR code info can be made more dynamic ?
3- In the case of no registered private keys, 12-word passphrase or register button must be used.
4- Transaction api will cost money.

Notes for current implementation:
1- In client.dart ChainID is changed to 3 for ropsten testnet, for mainnet use 1.
2- Qrreader and Qrgenerator page names are mixed up
3- This code works for ropsten testnet, i could not find a node provider for avalanche testnet. But we have a provider for avalanche mainnet.


//API KEY : PZS5ZQDASD1E8VY7JSXAEQIKG43XGIYIA7

Json format must be as follows:

{
address: "receiver address",
type: "coin name, example: SU",
bill:  {
       item1: "10",
       item2: "20",
       item3: "30",
       AnyItemWithAnyName: "price"
       }
}


important: bill MUST contain a stringified json.

Generator code:

              Map<String,dynamic> jsonObject = new Map<String,dynamic>() ;
              Map<String,dynamic> jsonObject2 = new Map<String,dynamic>() ;
              jsonObject["address"] = globals.userAddress;
              jsonObject2["payment"] = value;
              jsonObject["bill"] = json.encode(jsonObject2);
              jsonObject["type"] = "SU";


              QrImage(data: json.encode(

                  jsonObject

              )


Scanners parsing code:
-Result is scanned data.

      Map<String, dynamic> regularInfo = jsonDecode(result.code!);
      Map<String, dynamic> purchaseInfo = jsonDecode(regularInfo["bill"]);
      String paymentAddr = regularInfo["address"];
      String paymentType = regularInfo["type"];